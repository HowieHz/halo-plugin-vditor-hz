plugins {
    id 'java'
    id "com.github.node-gradle.node" version "5.0.0"
    id "io.freefair.lombok" version "8.0.1"
    id "run.halo.plugin.devtools" version "0.0.7"
}

group 'top.mczhengyi'
sourceCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
    maven { url 'https://s01.oss.sonatype.org/content/repositories/releases' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
    implementation platform('run.halo.tools.platform:plugin:2.11.0-SNAPSHOT')
    compileOnly 'run.halo.app:api'

    testImplementation 'run.halo.app:api'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

node {
    nodeProjectDir = file("${project.projectDir}/console")
}

task downloadDependencies {
    doLast {
        if (System.properties['os.name'].toLowerCase().contains('windows')) {
            // 在 Windows 上运行 a.bat
            exec {
                commandLine 'cmd', '/c', 'download_dist.bat'
            }
        } else {
            // 在非 Windows 系统上运行 a.sh
            exec {
                commandLine './download_dist.sh'
            }
        }
    }
}

task buildFrontend(type: PnpmTask) {
    args = ['build']

    // 让 buildFrontend 依赖于 downloadDependencies
    final downloadDependenciesTask = tasks.named('downloadDependencies')
    finalizedBy(downloadDependenciesTask)
}

build {
    // build frontend before build
    tasks.getByName('compileJava').dependsOn('buildFrontend')
}

halo {
    version = '2.17'
    superAdminUsername = 'admin'
    superAdminPassword = 'admin'
    externalUrl = 'http://localhost:8090'
    debug = true
}